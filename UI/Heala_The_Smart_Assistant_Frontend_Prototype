
from databricks_genai_inference import ChatCompletion



import tkinter as tk
import requests
import json




# Function to ask model a quuestion and get the result
def run_databricks_query(query,id):
    if id == "12345":
        response = ChatCompletion.create(model="databricks-dbrx-instruct",
                                    messages=[{"role": "system", "content": "You are a helpful assistant.Patient 12345 data: Visit on 2023-06-01 with Dr. Vidya: Patient complained of headache and nausea.. Prescriptions: Ibuprofen 200mg twice a day. Visit on 2023-06-15 with Dr. Krishna: Follow-up visit. Headache has subsided.. Prescriptions: Ibuprofen 200mg once a day. Alert on 2023-06-10: Prescription for Ibuprofen needs to be renewed"},
                                            {"role": "user","content": query}],
                                    max_tokens=128)

        return response.message
    else:
        return "Error: Invalid id"

# Function to handle the button click event
def get_answer():
    query = question_entry.get()
    id = id_entry.get()
    answer = run_databricks_query(query,id)  #run_databricks_query(query)
    answer_text.delete(1.0, tk.END)
    answer_text.insert(tk.END, answer)

# Create the main application window
root = tk.Tk()
root.title("Model Query Form")

id_label = tk.Label(root, text="Enter your id:")
id_label.pack(pady=5)
id_entry = tk.Entry(root, width=5)
id_entry.pack(pady=5)


# Create and place the question label and text box
question_label = tk.Label(root, text="Enter your query:")
question_label.pack(pady=5)
question_entry = tk.Entry(root, width=50)
question_entry.pack(pady=5)

# Create and place the button to get the answer
answer_button = tk.Button(root, text="Get Answer", command=get_answer)
answer_button.pack(pady=10)

# Create and place the answer label and text box
answer_label = tk.Label(root, text="Answer:")
answer_label.pack(pady=5)
answer_text = tk.Text(root, height=15, width=50)
answer_text.pack(pady=5)

# Run the application
root.mainloop()
